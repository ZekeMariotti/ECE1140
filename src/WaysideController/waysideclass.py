from datetime import *
from distutils.cmd import Command
import sys
import os
import json
from json import JSONEncoder
#dictionary of suggested speeds
suggestedSpeed = {
    1: 0,
    2: 0,
    3: 0,
    4: 0,
    5: 0,
    6: 0,
    7: 0,
    8: 0,
    9: 0,
    10: 0,
    11: 0,
    12: 0,
    13: 0,
    14: 0,
    15: 0,
    16: 0,
    17: 0,
    18: 0,
    19: 0,
    20: 0,
    21: 0,
    22: 0,
    23: 0,
    24: 0,
    25: 0,
    26: 0,
    27: 0,
    28: 0,
    29: 0,
    30: 0,
    31: 0,
    32: 0,
    33: 0,
    34: 0,
    35: 0,
    36: 0,
    37: 0,
    38: 0,
    39: 0,
    40: 0,
    41: 0,
    42: 0,
    43: 0,
    44: 0,
    45: 0,
    46: 0,
    47: 0,
    48: 0,
    49: 0,
    50: 0,
    51: 0,
    52: 0,
    53: 0,
    54: 0,
    55: 0,
    56: 0,
    57: 0,
    58: 0,
    59: 0,
    60: 0,
    61: 0,
    62: 0,
    63: 0,
    64: 0,
    65: 0,
    66: 0,
    67: 0,
    68: 0,
    69: 0,
    70: 0,
    71: 0,
    72: 0,
    73: 0,
    74: 0,
    75: 0,
    76: 0,
    77: 0,
    78: 0,
    79: 0,
    80: 0,
    81: 0,
    82: 0,
    83: 0,
    84: 0,
    85: 0,
    86: 0,
    87: 0,
    88: 0,
    89: 0,
    90: 0,
    91: 0,
    92: 0,
    93: 0,
    94: 0,
    95: 0,
    96: 0,
    97: 0,
    98: 0,
    99: 0,
    100: 0,
    101: 0,
    102: 0,
    103: 0,
    104: 0,
    105: 0,
    106: 0,
    107: 0,
    108: 0,
    109: 0,
    110: 0,
    111: 0,
    112: 0,
    113: 0,
    114: 0,
    115: 0,
    116: 0,
    117: 0,
    118: 0,
    119: 0,
    120: 0,
    121: 0,
    122: 0,
    123: 0,
    124: 0,
    125: 0,
    126: 0,
    127: 0,
    128: 0,
    129: 0,
    130: 0,
    131: 0,
    132: 0,
    133: 0,
    134: 0,
    135: 0,
    136: 0,
    137: 0,
    138: 0,
    139: 0,
    140: 0,
    141: 0,
    142: 0,
    143: 0,
    144: 0,
    145: 0,
    146: 0,
    147: 0,
    148: 0,
    149: 0,
    150: 0
}
#dictionary of commanded speeds
commandedSpeed = {
    1: 0,
    2: 0,
    3: 0,
    4: 0,
    5: 0,
    6: 0,
    7: 0,
    8: 0,
    9: 0,
    10: 0,
    11: 0,
    12: 0,
    13: 0,
    14: 0,
    15: 0,
    16: 0,
    17: 0,
    18: 0,
    19: 0,
    20: 0,
    21: 0,
    22: 0,
    23: 0,
    24: 0,
    25: 0,
    26: 0,
    27: 0,
    28: 0,
    29: 0,
    30: 0,
    31: 0,
    32: 0,
    33: 0,
    34: 0,
    35: 0,
    36: 0,
    37: 0,
    38: 0,
    39: 0,
    40: 0,
    41: 0,
    42: 0,
    43: 0,
    44: 0,
    45: 0,
    46: 0,
    47: 0,
    48: 0,
    49: 0,
    50: 0,
    51: 0,
    52: 0,
    53: 0,
    54: 0,
    55: 0,
    56: 0,
    57: 0,
    58: 0,
    59: 0,
    60: 0,
    61: 0,
    62: 0,
    63: 0,
    64: 0,
    65: 0,
    66: 0,
    67: 0,
    68: 0,
    69: 0,
    70: 0,
    71: 0,
    72: 0,
    73: 0,
    74: 0,
    75: 0,
    76: 0,
    77: 0,
    78: 0,
    79: 0,
    80: 0,
    81: 0,
    82: 0,
    83: 0,
    84: 0,
    85: 0,
    86: 0,
    87: 0,
    88: 0,
    89: 0,
    90: 0,
    91: 0,
    92: 0,
    93: 0,
    94: 0,
    95: 0,
    96: 0,
    97: 0,
    98: 0,
    99: 0,
    100: 0,
    101: 0,
    102: 0,
    103: 0,
    104: 0,
    105: 0,
    106: 0,
    107: 0,
    108: 0,
    109: 0,
    110: 0,
    111: 0,
    112: 0,
    113: 0,
    114: 0,
    115: 0,
    116: 0,
    117: 0,
    118: 0,
    119: 0,
    120: 0,
    121: 0,
    122: 0,
    123: 0,
    124: 0,
    125: 0,
    126: 0,
    127: 0,
    128: 0,
    129: 0,
    130: 0,
    131: 0,
    132: 0,
    133: 0,
    134: 0,
    135: 0,
    136: 0,
    137: 0,
    138: 0,
    139: 0,
    140: 0,
    141: 0,
    142: 0,
    143: 0,
    144: 0,
    145: 0,
    146: 0,
    147: 0,
    148: 0,
    149: 0,
    150: 0
}

#dictionary of authority
authority = {
    1: 0,
    2: 0,
    3: 0,
    4: 0,
    5: 0,
    6: 0,
    7: 0,
    8: 0,
    9: 0,
    10: 0,
    11: 0,
    12: 0,
    13: 0,
    14: 0,
    15: 0,
    16: 0,
    17: 0,
    18: 0,
    19: 0,
    20: 0,
    21: 0,
    22: 0,
    23: 0,
    24: 0,
    25: 0,
    26: 0,
    27: 0,
    28: 0,
    29: 0,
    30: 0,
    31: 0,
    32: 0,
    33: 0,
    34: 0,
    35: 0,
    36: 0,
    37: 0,
    38: 0,
    39: 0,
    40: 0,
    41: 0,
    42: 0,
    43: 0,
    44: 0,
    45: 0,
    46: 0,
    47: 0,
    48: 0,
    49: 0,
    50: 0,
    51: 0,
    52: 0,
    53: 0,
    54: 0,
    55: 0,
    56: 0,
    57: 0,
    58: 0,
    59: 0,
    60: 0,
    61: 0,
    62: 0,
    63: 0,
    64: 0,
    65: 0,
    66: 0,
    67: 0,
    68: 0,
    69: 0,
    70: 0,
    71: 0,
    72: 0,
    73: 0,
    74: 0,
    75: 0,
    76: 0,
    77: 0,
    78: 0,
    79: 0,
    80: 0,
    81: 0,
    82: 0,
    83: 0,
    84: 0,
    85: 0,
    86: 0,
    87: 0,
    88: 0,
    89: 0,
    90: 0,
    91: 0,
    92: 0,
    93: 0,
    94: 0,
    95: 0,
    96: 0,
    97: 0,
    98: 0,
    99: 0,
    100: 0,
    101: 0,
    102: 0,
    103: 0,
    104: 0,
    105: 0,
    106: 0,
    107: 0,
    108: 0,
    109: 0,
    110: 0,
    111: 0,
    112: 0,
    113: 0,
    114: 0,
    115: 0,
    116: 0,
    117: 0,
    118: 0,
    119: 0,
    120: 0,
    121: 0,
    122: 0,
    123: 0,
    124: 0,
    125: 0,
    126: 0,
    127: 0,
    128: 0,
    129: 0,
    130: 0,
    131: 0,
    132: 0,
    133: 0,
    134: 0,
    135: 0,
    136: 0,
    137: 0,
    138: 0,
    139: 0,
    140: 0,
    141: 0,
    142: 0,
    143: 0,
    144: 0,
    145: 0,
    146: 0,
    147: 0,
    148: 0,
    149: 0,
    150: 0
}
#dictionary of Light states
signalLights = {
    1: "R",
    2: "R",
    3: "R",
    4: "R",
    5: "R",
    6: "R",
    7: "R",
    8: "R",
    9: "R",
    10: "R",
    11: "R",
    12: "R",
    13: "R",
    14: "R",
    15: "R",
    16: "R",
    17: "R",
    18: "R",
    19: "R",
    20: "R",
    21: "R",
    22: "R",
    23: "R",
    24: "R",
    25: "R",
    26: "R",
    27: "R",
    28: "R",
    29: "R",
    30: "R",
    31: "R",
    32: "R",
    33: "R",
    34: "R",
    35: "R",
    36: "R",
    37: "R",
    38: "R",
    39: "R",
    40: "R",
    41: "R",
    42: "R",
    43: "R",
    44: "R",
    45: "R",
    46: "R",
    47: "R",
    48: "R",
    49: "R",
    50: "R",
    51: "R",
    52: "R",
    53: "R",
    54: "R",
    54: "R",
    55: "R",
    56: "R",
    57: "R",
    58: "R",
    59: "R",
    60: "R",
    61: "R",
    62: "R",
    63: "R",
    64: "R",
    65: "R",
    66: "R",
    67: "R",
    68: "R",
    69: "R",
    70: "R",
    71: "R",
    72: "R",
    73: "R",
    74: "R",
    75: "R",
    76: "R",
    77: "R",
    78: "R",
    79: "R",
    80: "R",
    81: "R",
    82: "R",
    83: "R",
    84: "R",
    85: "R",
    86: "R",
    87: "R",
    88: "R",
    89: "R",
    90: "R",
    91: "R",
    92: "R",
    93: "R",
    94: "R",
    95: "R",
    96: "R",
    97: "R",
    98: "R",
    99: "R",
    100: "R",
    101: "R",
    102: "R",
    103: "R",
    104: "R",
    105: "R",
    106: "R",
    107: "R",
    108: "R",
    109: "R",
    110: "R",
    111: "R",
    112: "R",
    113: "R",
    114: "R",
    115: "R",
    116: "R",
    117: "R",
    118: "R",
    119: "R",
    120: "R",
    121: "R",
    122: "R",
    123: "R",
    124: "R",
    125: "R",
    126: "R",
    127: "R",
    128: "R",
    129: "R",
    130: "R",
    131: "R",
    132: "R",
    133: "R",
    134: "R",
    135: "R",
    136: "R",
    137: "R",
    138: "R",
    139: "R",
    140: "R",
    141: "R",
    142: "R",
    143: "R",
    144: "R",
    145: "R",
    146: "R",
    147: "R",
    148: "R",
    149: "R",
    150: "R"
}

#Dictionary of block occupancy
occupancy = {
    1: True,
    2: True,
    3: True,
    4: True,
    5: True,
    6: True,
    7: True,
    8: True,
    9: True,
    10: True,
    11: True,
    12: True,
    13: True,
    14: True,
    15: True,
    16: True,
    17: True,
    18: True,
    19: True,
    20: True,
    21: True,
    22: True,
    23: True,
    24: True,
    25: True,
    26: True,
    27: True,
    28: True,
    29: True,
    30: True,
    31: True,
    32: True,
    33: True,
    34: True,
    35: True,
    36: True,
    37: True,
    38: True,
    39: True,
    40: True,
    41: True,
    42: True,
    43: True,
    44: True,
    45: True,
    46: True,
    47: True,
    48: True,
    49: True,
    50: True,
    51: True,
    52: True,
    53: True,
    54: True,
    55: True,
    56: True,
    57: True,
    58: True,
    59: True,
    60: True,
    61: True,
    62: True,
    63: True,
    64: True,
    65: True,
    66: True,
    67: True,
    68: True,
    69: True,
    70: True,
    71: True,
    72: True,
    73: True,
    74: True,
    75: True,
    76: True,
    77: True,
    78: True,
    79: True,
    80: True,
    81: True,
    82: True,
    83: True,
    84: True,
    85: True,
    86: True,
    87: True,
    88: True,
    89: True,
    90: True,
    91: True,
    92: True,
    93: True,
    94: True,
    95: True,
    96: True,
    97: True,
    98: True,
    99: True,
    100: True,
    101: True,
    102: True,
    103: True,
    104: True,
    105: True,
    106: True,
    107: True,
    108: True,
    109: True,
    110: True,
    111: True,
    112: True,
    113: True,
    114: True,
    115: True,
    116: True,
    117: True,
    118: True,
    119: True,
    120: True,
    121: True,
    122: True,
    123: True,
    124: True,
    125: True,
    126: True,
    127: True,
    128: True,
    129: True,
    130: True,
    131: True,
    132: True,
    133: True,
    134: True,
    135: True,
    136: True,
    137: True,
    138: True,
    139: True,
    140: True,
    141: True,
    142: True,
    143: True,
    144: True,
    145: True,
    146: True,
    147: True,
    148: True,
    149: True,
    150: True
}

brokenrail = {
     1: False,
     2: False,
     3: False,
     4: False,
     5: False,
     6: False,
     7: False,
     8: False,
     9: False,
    10: False,
    11: False,
    12: False,
    13: False,
    14: False,
    15: False,
    16: False,
    17: False,
    18: False,
    19: False,
    20: False,
    21: False,
    22: False,
    23: False,
    24: False,
    25: False,
    26: False,
    27: False,
    28: False,
    29: False,
    30: False,
    31: False,
    32: False,
    33: False,
    34: False,
    35: False,
    36: False,
    37: False,
    38: False,
    39: False,
    40: False,
    41: False,
    42: False,
    43: False,
    44: False,
    45: False,
    46: False,
    47: False,
    48: False,
    49: False,
    50: False,
    51: False,
    52: False,
    53: False,
    54: False,
    55: False,
    56: False,
    57: False,
    58: False,
    59: False,
    60: False,
    61: False,
    62: False,
    63: False,
    64: False,
    65: False,
    66: False,
    67: False,
    68: False,
    69: False,
    70: False,
    71: False,
    72: False,
    73: False,
    74: False,
    75: False,
    76: False,
    77: False,
    78: False,
    79: False,
    80: False,
    81: False,
    82: False,
    83: False,
    84: False,
    85: False,
    86: False,
    87: False,
    88: False,
    89: False,
    90: False,
    91: False,
    92: False,
    93: False,
    94: False,
    95: False,
    96: False,
    97: False,
    98: False,
    99: False,
    100: False,
    101: False,
    102: False,
    103: False,
    104: False,
    105: False,
    106: False,
    107: False,
    108: False,
    109: False,
    110: False,
    111: False,
    112: False,
    113: False,
    114: False,
    115: False,
    116: False,
    117: False,
    118: False,
    119: False,
    120: False,
    121: False,
    122: False,
    123: False,
    124: False,
    125: False,
    126: False,
    127: False,
    128: False,
    129: False,
    130: False,
    131: False,
    132: False,
    133: False,
    134: False,
    135: False,
    136: False,
    137: False,
    138: False,
    139: False,
    140: False,
    141: False,
    142: False,
    143: False,
    144: False,
    145: False,
    146: False,
    147: False,
    148: False,
    149: False,
    150: False
}

switches = {
       1: True,
       2: True,
       3: True,
       4: True,
       5: True
}

gates = {
       1: True
}

WaysidetoCTC ={
        "SwitchPosition" :switches,
        "Occupancy"      :occupancy,
        "BrokenRail"     :brokenrail,
        "Switches"       :switches
}

WaysidetoTrackModel ={
       "GatePosition"   : gates,
       "Authority"      : authority,
       "CommandedSpeed" : commandedSpeed,
       "SimTime"        : "2023-02-22T11:00:00.0000000-05:00",
       "SwitchPositon"  : switches,
       "SignalLights"   : signalLights
}

class WaysideControllerGreen:
    def __init__(self,inputTime,trackOperational):
            self.realTime=None
            self.currentTime=None
            self.previousTime=None
            self.trackOperational=trackOperational
            
            
   
    def getCommandedSpeed(self,x):
            return(suggestedSpeed.get(x))
        
    def getAuthority(self,x):
            return(authority.get(x))
        
    def getOccupancy(self,x):
            return(occupancy.get(x))
        
    def getTime(self):
            return(self.inputTime)
        
    def getTrackOperational(self):
            return(self.trackOperational)
        
    def getBrokenRail(self,x):
            return(brokenrail.get(x))
        
    def getSwitchPositions(self,x):
            return(switches.get(x))
        
    def getGatePositions(self):
            return(gates.get(1))
        
    def getSignalLights(self,x):
            return(signalLights.get(x))
        
        #Add error checking later
    def setCommandedSpeed(self,suggestedSpeed,Block):
        if suggestedSpeed>70 | suggestedSpeed<0:
                suggestedSpeed=0
        suggestedSpeed[Block]=suggestedSpeed

    def setAuthority(self,authority,Block):
        authority[Block]=authority

    def setOccupancy(self,occupancy,Block):
        occupancy[Block]=occupancy

    def setTime(self,time):
            self.time = time

    def setTrackOperational(self, trackOperational):
            self.trackOperational = trackOperational

    def setBrokenRail(self,brokenRail):
            self.brokenrail = brokenRail

    def setSwitchPositions(self,logic,number):
            switches[number]=logic

    def setGatePositions(self,Direction):
            gates[1]=Direction

    def setSignalLights(self,Color):
            self.signalLights = Color

    def convertTime(self):
            inputTime = stringRemove(self.time, 26)
            self.realTime = datetime.strptime(inputTime, "%Y-%m-%dT%H:%M:%S.%f%z") 
            
    def WaysideToCTC():
        with open(os.path.join(sys.path[0], "WaysidetoCTC.json"), "w") as filename:
            (json.dump(WaysidetoCTC, filename, indent = 4))

    def WaysideToTrack():
        with open(os.path.join(sys.path[0], "WaysidetoTrack.json"), "w") as filename:
            (json.dump(WaysidetoTrackModel, filename, indent = 4))

    #unfinishedPLC
    def uploadPLC(self,file):
            return()     
           
def stringRemove(string, n):  
        first = string[: n]   
        last = string[n+1:]  
        return first + last



    
   
